export async function plaseazaComanda(token, produse) {
  const response = await fetch('https://localhost:5001/api/comenzi/plaseaza', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ produse })
  });

  if (!response.ok) {
    throw new Error(await response.text());
  }

  return await response.text();
}


export async function getToateComenzile(token) {
  const response = await fetch('https://localhost:5001/api/comenzi/toate', {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`
    }
  });

  if (!response.ok) {
    throw new Error(await response.text());
  }

  return await response.json();
}


export async function actualizeazaStatus(token, comandaId, statusNou) {
  const response = await fetch(`https://localhost:5001/api/comenzi/${comandaId}/status?status=${statusNou}`, {
    method: 'PUT',
    headers: {
      'Authorization': `Bearer ${token}`
    }
  });

  if (!response.ok) {
    throw new Error(await response.text());
  }

  return await response.text();
}


export async function seteazaTimp(token, comandaId, minute) {
  const response = await fetch(`https://localhost:5001/api/comenzi/${comandaId}/timp?minute=${minute}`, {
    method: 'PUT',
    headers: {
      'Authorization': `Bearer ${token}`
    }
  });

  if (!response.ok) {
    throw new Error(await response.text());
  }

  return await response.text();
}


import { useEffect, useState } from 'react';
import { getToateComenzile } from './api/comenzi';

function ListaComenzi() {
  const [comenzi, setComenzi] = useState([]);
  const token = localStorage.getItem('token');

  useEffect(() => {
    getToateComenzile(token)
      .then(setComenzi)
      .catch(err => console.error('Eroare:', err));
  }, []);

  return (
    <div>
      <h2>Comenzi</h2>
      <ul>
        {comenzi.map(c => (
          <li key={c.id}>
            {c.utilizator.email} - {c.status} - {c.total} lei
          </li>
        ))}
      </ul>
    </div>
  );
}
